<!-- Converted by db4-upgrade version 1.0 -->

<section xml:id="s-apache-bindaddress"><info><title>Configurando as interfaces que o Apache atenderá</title></info>
<para>
A diretiva <emphasis>BindAddress</emphasis> é usada para especificar endereços
IP das interfaces ou endereços FQDN que o <command>Apache</command> responderá
requisições.  Mais de um endereço podem ser especificados separados por
espaços.  Caso não seja definido, o <command>Apache</command> assumirá o valor
"*" (atenderá requisições vindas de qualquer interface).
</para>
<para>
<emphasis role="strong">OBS1:</emphasis> - É permitido usar somente uma
diretiva <emphasis>BindAddress</emphasis>.  A diretiva
<emphasis>Listen</emphasis> deverá ser usada se desejar mais controle sobre as
portas do servidor web.  Veja <xref linkend="s-apache-listen"/> para detalhes.
</para>
<para>
<emphasis role="strong">OBS2:</emphasis> - As interfaces especificadas pela
diretiva <emphasis>Listen</emphasis> substituirá as especificadas em
<emphasis>BindAddress</emphasis>.
</para>
<para>
Exemplo:
</para>
<itemizedlist>
<listitem>
<para>
<literal>BindAddress 192.168.1.1</literal> - Especifica que os usuários da
faixa de rede <filename>192.168.1.*</filename> terão acesso ao servidor
<command>httpd</command>.  Isto assume que a máquina possui o endereço
<filename>192.168.1.1</filename> em sua interface de rede interna.
</para>
</listitem>
<listitem>
<para>
<literal>BindAddress *</literal> - Atenderá requisições vindas de qualquer
interface de rede.
</para>
</listitem>
</itemizedlist>
</section>

<section xml:id="s-apache-listen"><info><title>Especificando endereços/portas adicionais (a diretiva <emphasis>Listen</emphasis>)</title></info>
<para>
A diretiva <emphasis>Listen</emphasis> é usada para se ter um controle maior
sobre a especificação de endereços/portas alternativas que o servidor web
esperará por requisições externas.  Esta diretiva é muito usada na construção
de <emphasis>Virtual Hosts</emphasis>.  Esta diretiva pode substituir
completamente as diretivas <emphasis>Port</emphasis> e
<emphasis>BindAddress</emphasis>.  Podem ser usados o número da porta, ou o par
<literal>endereço:porta</literal>:
</para>
<screen>
Listen 192.168.1.1:80
Listen 192.168.7.1:81
Listen 60000
</screen>
<para>
O endereço que deverá ser usado é o da interface de rede (assim como na
diretiva <emphasis>BindAddress</emphasis>).  No exemplo acima, o servidor
<command>httpd</command> esperará por requisições vindas de
<filename>192.168.1.*</filename> na porta 80 e também 60000, e requisições
vindas de 192.168.7.1 na porta 81 e também 60000.
</para>
</section>

<section xml:id="s-apache-acesso"><info><title>Especificando opções/permissões para as páginas</title></info>
<para>
As opções de restrição podem tanto ser especificadas nas diretivas
&lt;Directory&gt;, &lt;Location&gt; ou &lt;Files&gt; quanto nos arquivos
<filename>.htaccess</filename> (ou outro nome de arquivo de controle de acesso
especificado pela opção <emphasis>AccessFileName</emphasis> do arquivo de
configuração do <command>Apache</command>).  Cada diretiva de acesso é
especificada entre &lt;tags&gt; e devem ser fechadas com &lt;/tag&gt; (como na
linguagem HTML).  As seguintes diretivas de acesso são válidas no
<command>Apache</command>:
</para>
<variablelist>
<varlistentry>
<term>Directory</term>
<listitem>
<para>
As restrição afetará o diretório no disco especificado, conseqüentemente a
página armazenada nele.  Por exemplo:
</para>
<screen>
&lt;Directory /var/www&gt;
 Order deny,allow
 deny from all
 allow from 10.1.0.1
&lt;Directory&gt;
</screen>
<para>
O acesso ao diretório <filename>/var/www</filename> será permitido somente ao
computador com o endereço IP <literal>10.1.0.1</literal>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>DirectoryMatch</term>
<listitem>
<para>
Funciona como a diretiva &lt;Directory&gt; mas trabalha com expressões
regulares como argumento.  Por exemplo:
</para>
<screen>
&lt;DirectoryMatch "^/www/.*"&gt;
 Order deny,allow
 deny from all
&lt;DirectoryMatch&gt;
</screen>
<para>
Bloqueará o acesso ao diretório <filename>/www</filename> e sub-diretórios
dentro dele.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Files</term>
<listitem>
<para>
As restrições afetarão os arquivos do disco que conferem com o especificado.  É
possível usar os coringas <emphasis>?</emphasis> e <emphasis>*</emphasis> como
no shell.  Também podem ser usadas expressões regulares especificando um "~"
após <literal>Files</literal> e antes da expressão.  Por exemplo:
</para>
<screen>
&lt;Files *.txt&gt;
 Order deny,allow
 deny from all
&lt;/Files&gt;
</screen>
<para>
Bloqueia o acesso a todos os arquivos com a extensão <filename>.txt</filename>
</para>
<screen>
&lt;Files ~ "\.(gif|jpe?g|bmp|png)$"&gt;
 Order deny,allow
&lt;/Files&gt;
</screen>
<para>
Bloqueia o acesso a arquivos <filename>gif, jpg, jpeg, bmp, png</filename>
(note que o "~" ativa o modo de interpretação de expressões regulares).
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>FilesMatch</term>
<listitem>
<para>
Permite usar expressões regulares na especificação de arquivos (equivalente a
diretiva &lt;Files ~ "expressão"&gt;).  Por exemplo:
</para>
<screen>
&lt;FilesMatch "\.(gif|jpe?g|bmp|png)$"&gt;
 Order deny,allow
&lt;/FilesMatch&gt;
</screen>
<para>
Bloqueia o acesso a arquivos <filename>gif, jpg, jpeg, bmp, png</filename>.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Location</term>
<listitem>
<para>
As restrições afetarão o diretório base especificado na URL e seus
sub-diretórios.  Por exemplo:
</para>
<screen>
&lt;Location /security&gt;
 Order allow,deny
&lt;/Location&gt;
</screen>
<para>
Bloqueia o acesso de todos os usuários ao diretório
<filename>/security</filename> da URL (a explicação porque o acesso é bloqueado
neste caso será explicado em <xref linkend="s-apache-acesso-restr-autor"/>).
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>LocationMatch</term>
<listitem>
<para>
Idêntico a diretiva &lt;Location&gt; mas trabalha com expressões regulares.
Por exemplo:
</para>
<screen>
&lt;LocationMatch "/(extra|special)/data"&gt;
 Order deny,allow
 deny from all
&lt;/LocationMatch&gt;
</screen>
<para>
Bloqueará URLs que contém a substring "/extra/data" ou "/special/data".
</para>
</listitem>
</varlistentry>
</variablelist>
<para>
O uso das diretivas &lt;Directory&gt; e &lt;Files&gt; é apropriada quando você
deseja trabalhar com permissões a nível de diretórios/arquivos no disco local
(o controle do proxy também é feito via &lt;Directory&gt;), o uso da diretiva
&lt;Location&gt; é adequado para trabalhar com permissões a nível de URL.  A
ordem de processamento das diretivas de acesso são processadas é a seguinte:
</para>
<orderedlist numeration="arabic">
<listitem>
<para>
A diretiva &lt;Directory&gt; (com exceção de &lt;DirectoryMatch&gt;) e os
arquivos <filename>.htaccess</filename> são processados simultaneamente.  As
definições dos arquivos <filename>.htaccess</filename> substituem as de
&lt;Directory&gt;)
</para>
</listitem>
<listitem>
<para>
Expressões regulares de &lt;DirectoryMatch&gt;, &lt;Directory&gt;.
</para>
</listitem>
<listitem>
<para>
&lt;Files&gt; e &lt;FilesMatch&gt; são processados simultaneamente.
</para>
</listitem>
<listitem>
<para>
&lt;Location&gt; e &lt;LocationMatch&gt; são processados simultaneamente.
</para>
</listitem>
</orderedlist>
<para>
Normalmente é encontrado a opção <emphasis>Options</emphasis> dentro de uma das
diretivas acima, a função desta diretiva é controlar os seguintes aspectos da
listagem de diretórios:
</para>
<variablelist>
<varlistentry>
<term>All</term>
<listitem>
<para>
Todas as opções são usadas exceto a <literal>MultiViews</literal>.  É a padrão
caso a opção <emphasis>Options</emphasis> não seja especificada.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>ExecCGI</term>
<listitem>
<para>
Permite a execução de scripts CGI.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>FollowSymLinks</term>
<listitem>
<para>
O servidor seguirá links simbólicos neste diretório (o caminho não é
modificado).  Esta opção é ignorada caso apareça dentro das diretivas
&lt;Location&gt;, &lt;LocationMatch&gt; e &lt;DirectoryMatch&gt;.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Includes</term>
<listitem>
<para>
É permitido o uso de includes no lado do servidor.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>IncludesNOEXEC</term>
<listitem>
<para>
É permitido o uso de includes do lado do servidor, mas o comando
<literal>#exec</literal> e <literal>#include</literal> de um script CGI são
desativados.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Indexes</term>
<listitem>
<para>
Se não existir um arquivo especificado pela diretiva &lt;DirectoryIndex&gt; no
diretório especificado, o servidor formatará automaticamente a listagem ao
invés de gerar uma resposta de acesso negado.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>MultiViews</term>
<listitem>
<para>
Permite o uso da Negociação de conteúdo naquele diretório.  A negociação de
conteúdo permite o envio de um documento no idioma requisitado pelo navegador
do cliente.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>SymLinksIfOwnerMatch</term>
<listitem>
<para>
O servidor somente seguirá links simbólicos se o arquivo ou diretório alvo
tiver como dono o mesmo user ID do link.  Esta opção é ignorada caso apareça
dentro das diretivas &lt;Location&gt;, &lt;LocationMatch&gt; e
&lt;DirectoryMatch&gt;.
</para>
</listitem>
</varlistentry>
</variablelist>
<para>
Múltiplos parâmetros para <emphasis>Options</emphasis> podem ser especificados
através de espaços.
</para>
<para>
<emphasis role="strong">OBS1</emphasis>: A opção Options não tem efeito dentro
da diretiva FILES.
</para>
<para>
<emphasis role="strong">OBS2</emphasis>: Tanto faz usar maiúsculas quanto
minúsculas nas diretivas de configuração, opções e parâmetros de configuração
do <command>Apache</command>, a capitalização apenas ajuda a leitura e
interpretação: SymLinksIfOwnerMatch (LinksSimbólicosSeDonoConferir).
</para>
<para>
As opções especificadas para o diretório afetam também seus sub-diretórios, a
não ser que sejam especificadas opções separadas para o sub-diretório:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes FollowSymLinks
&lt;/Directory&gt;
</screen>
<para>
Ao acessar o diretório <filename>/var/www/focalinux</filename>, as permissões
usadas serão de <filename>/var/www</filename>, ao menos que uma diretiva
&lt;Directory&gt; ou &lt;Location&gt; seja especificada:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes FollowSymLinks
&lt;/Directory&gt;

&lt;Directory /var/www/focalinux&gt;
 Options Includes
&lt;/Directory&gt;
</screen>
<para>
As opções e restrições de acesso de <filename>/var/www/focalinux</filename>
serão EXATAMENTE as especificadas no bloco da diretiva &lt;Directory
/var/www/focalinux&gt; e somente os <emphasis>includes</emphasis> serão
permitidos.  Para adicionar ou remover uma opção individual definidas por
diretivas anteriores, podem ser usado os sinais "+" ou "-", por exemplo:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes FollowSymLinks
&lt;/Directory&gt;

&lt;Directory /var/www/focalinux&gt;
 Options +Includes -Indexes
&lt;/Directory&gt;
</screen>
<para>
As opções <emphasis>Indexes</emphasis> e <emphasis>FollowSymLinks</emphasis>
são definidas para o diretório <filename>/var/www</filename>, então as
permissões do diretório <filename>/var/www/focalinux</filename> serão
<emphasis>FollowSymLinks</emphasis> (do diretório
<filename>/web/docs</filename>) e <emphasis>Includes</emphasis> (adicionada) e
o parâmetro <emphasis>Indexes</emphasis> não terá efeito neste diretório.
</para>
<para>
É permitido fazer um aninhamento das diretivas &lt;Directory&gt; e
&lt;Files&gt;:
</para>
<screen>
&lt;Directory /var/www&gt;
 Order allow,deny
 allow from all

 &lt;Files LEIAME-DONO.txt&gt;
  Order deny,allow
  deny from all
 &lt;/Files&gt;

&lt;/Directory&gt;
</screen>
<para>
Neste caso, somente os arquivos <filename>LEIAME-DONO.txt</filename> existentes
no diretório <filename>/var/www</filename> e seus sub-diretórios serão
bloqueados.
</para>
<para>
Se a diretiva &lt;Files&gt; for usada fora de uma estrutura &lt;Directory&gt;,
ela terá efeito em todos os arquivos disponibilizados pelo servidor.  Este é
excelente método para proteger os arquivos de acesso, senhas e grupos, conforme
será explicado mais adiante.
</para>
<para>
Qualquer outro tipo de aninhamento de diretivas resultará em um erro de
configuração ao se tentar carregar/recarregar o <command>Apache</command>.  Um
exemplo de diretiva incorreta:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes FollowSymLinks

 &lt;Directory /var/www/focalinux&gt;
  Options +Includes -Indexes
 &lt;/Directory&gt;

&lt;/Directory&gt;
</screen>
<para>
O correto é:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes FollowSymLinks
&lt;/Directory&gt;

&lt;Directory /var/www/focalinux&gt;
 Options +Includes -Indexes
&lt;/Directory&gt;
</screen>
<para>
Espero que tenha observado o erro no exemplo acima.
</para>
<para>
<emphasis role="strong">OBS1</emphasis>: Você pode verificar se a configuração
do apache está correta digitando <literal>apache -t</literal> como usuário
root, se tudo estiver correto com suas configurações ele retornará a mensagem:
"Syntax OK".
</para>
<para>
<emphasis role="strong">OBS2</emphasis>: Se <emphasis>Options</emphasis> não
for especificado, o padrão será permitir tudo exceto
<emphasis>MultiViews</emphasis>.
</para>
<para>
<emphasis role="strong">OBS3</emphasis>: Qualquer restrição afetará o diretório
atual e todos os seus sub-diretórios!  Defina permissões de sub-diretórios
específicos separadamente caso precise de um nível de acesso diferente.  Veja
também a seção sobre arquivos OverRide (<filename>.htaccess</filename>) para
detalhes sobre este tipo de arquivo.
</para>
<para>
<emphasis role="strong">OBS4</emphasis>: A diretiva de acesso "&lt;Directory
/&gt;" não afetará outros sistemas de arquivos montados dentro de seus
subdiretórios.  Caso uma diretiva de acesso padrão não seja especificada para
outros sistemas de arquivos, o acesso será automaticamente negado.
</para>
</section>

<section xml:id="s-apache-acesso-restr"><info><title>Restrições de Acesso</title></info>
<para>
A restrição de acesso do <command>Apache</command> é feita através de
<emphasis>Autorização</emphasis> (<xref linkend="s-apache-acesso-restr-autor"/>) e <emphasis>Autenticação</emphasis>
(<xref linkend="s-apache-acesso-restr-auth"/>).  Através da
<emphasis>autorização</emphasis>, é checado se o endereço/rede especificada tem
ou não permissão para acessar a página.  A <emphasis>autenticação</emphasis>
requer que seja passado nome e senha para garantir acesso a página.  Os métodos
de <emphasis>Autorização</emphasis> e <emphasis>Autenticação</emphasis> podem
ser combinados como veremos mais adiante.
</para>
<section xml:id="s-apache-acesso-restr-autor"><info><title>Autorização</title></info>
<para>
A restrição de acesso por autorização (controlado pelo módulo
<filename>mod_access</filename>), permite ou não o acesso ao cliente de acordo
com o endereço/rede especificada.  As restrições afetam também os
sub-diretórios do diretório alvo.  Abaixo um exemplo de restrição de acesso que
bloqueia o acesso de qualquer host que faz parte do domínio
<emphasis>.spammers.com.br</emphasis> a URL
<filename>http://servidor/teste</filename>:
</para>
<screen>
&lt;Location /teste&gt;
 Option Indexes
 Order allow,deny
 allow from all
 deny from .spammers.com.br
&lt;/Location&gt;
</screen>
<para>
A opção <literal>Option</literal> foi explicada acima, seguem as explicações
das outras diretivas:
</para>
<variablelist>
<varlistentry>
<term>Order</term>
<listitem>
<para>
Especifica em que ordem as opções de acesso <emphasis>allow/deny</emphasis>
serão pesquisadas.  Caso não seja especificada, o padrão será
<emphasis>deny/allow</emphasis>.  Note que a ordem de pesquisa de
<emphasis>allow</emphasis> e <emphasis>deny</emphasis> é a inversa da
especificada.  A diretiva <emphasis>Order</emphasis> aceita os seguintes
valores:
</para>
<itemizedlist>
<listitem>
<para>
<literal>deny,allow</literal> - Esta é a padrão, significa um servidor mais
restritivo; a diretiva <emphasis>allow</emphasis> é processada primeiro e
somente depois a diretiva <emphasis>deny</emphasis>.  Caso nenhuma diretiva
allow e deny forem especificadas ou não conferirem, <emphasis role="strong">PERMITE TUDO</emphasis> como padrão.
</para>
</listitem>
<listitem>
<para>
<literal>allow,deny</literal> - Significa um servidor mais permissivo, a opção
<emphasis>deny</emphasis> é processada primeiro e somente depois a opção
<emphasis>allow</emphasis>.  Caso nenhuma diretiva allow e deny for
especificadas ou não conferirem, <emphasis role="strong">BLOQUEIA
TUDO</emphasis> como padrão.
</para>
</listitem>
<listitem>
<para>
<literal>mutual-failure</literal> - Somente permite o acesso se o usuário
receber autorização através da opção <emphasis>allow</emphasis> e <emphasis role="strong">NÃO</emphasis> ser bloqueado pela opção
<emphasis>deny</emphasis>, caso uma das checagens falhe, o acesso é
imediatamente negado.  É uma opção interessante quando você quer somente
pessoas de um determinado endereço/rede acessando o seu sistema e não estejam
em sua lista negra :-)
</para>
</listitem>
</itemizedlist>
<para>
<emphasis role="strong">ATENÇÃO</emphasis>: É importante saber se a página será
permissiva ou restritiva para escolher a ordem mais adequada ao seu caso,
também leve em consideração a possibilidade do processamento cair na diretiva
de acesso padrão, caso nem a diretiva allow e deny conferiram e estiver usando
a ordem de acesso "allow,deny" ou "deny,allow".  Um sistema mal configurado
neste aspecto poderá trazer sérias conseqüências.
</para>
<para>
É comum em páginas permissivas se definir a seguinte configuração:
</para>
<screen>
Order allow,deny
allow from all
</screen>
<para>
O motivo é que em um grande site, se forem adicionadas mais restrições nesta
página (devido a alguns domínios que tem usuários mal comportados, bloqueio de
acesso a rede do concorrente, potenciais atacantes, etc...), estas deverão ser
lidas antes da diretiva "allow from all" e podem passar desapercebidas ao
administrador e podem simplesmente não funcionar caso a opção
<emphasis>Order</emphasis> não esteja ajustada corretamente (lembre-se, você é
o administrador e a integridade do site depende de sua atenção na escolha da
ordem correta das diretivas de acesso).
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>allow from</term>
<listitem>
<para>
Especifica o endereço que terá acesso ao recurso especificado.  A diretiva
<emphasis>allow</emphasis> from aceita os seguintes valores:
</para>
<itemizedlist>
<listitem>
<para>
<literal>all</literal> - O acesso é permitido a todos.
</para>
</listitem>
<listitem>
<para>
um endereço de domínio completo (FQDN).  Por exemplo
<filename>www.debian.org.br</filename>.
</para>
</listitem>
<listitem>
<para>
um endereço de domínio parcial.  Qualquer computador que confira com o inicio
ou fim terá o acesso permitido.  Por exemplo,
<filename>.spammers.com.br</filename>, <filename>.debian.org</filename>.
</para>
</listitem>
<listitem>
<para>
um endereço IP completo, como <literal>192.168.1.1</literal>
</para>
</listitem>
<listitem>
<para>
um endereço IP parcial como <literal>192.168.1.</literal>
</para>
</listitem>
<listitem>
<para>
um par rede/máscara como <literal>10.1.0.0/255.255.0.0</literal> ou
<literal>10.1.0.0/16</literal>, uma faixa de acesso a máquinas de uma mesma
rede pode ser definida facilmente através deste método.
</para>
</listitem>
</itemizedlist>
<para>
<emphasis role="strong">OBS1</emphasis>: É necessário reiniciar o
<command>Apache</command> depois de qualquer modificação em seu arquivo de
configuração (executando <literal>apachectl restart</literal>), ou recarregar
os arquivos de configuração (<literal>apachectl graceful</literal>).
</para>
<para>
<emphasis role="strong">OBS2</emphasis>: Mais de um host pode ser especificado
separando com um espaço:
</para>
<screen>
allow from 192.168. .debian.org.br
</screen>
<para>
Permitirá o acesso de qualquer máquina que o endereço IP confira com
<literal>192.168.*.*</literal> e qualquer computador do domínio
<literal>debian.org.br</literal>
</para>
<para>
<emphasis role="strong">OBS3</emphasis>: Regras baseadas em nomes simples de
hosts (como <literal>www</literal>) não conferirão!  Deverá ser usado o FQDN ou
IP: <literal>www.dominio.com.br</literal>
</para>
<para>
<emphasis role="strong">OBS4</emphasis>: Caso Order não seja especificado,
<emphasis>deny,allow</emphasis> será usado como padrão (ou seja, permitirá tudo
como padrão).
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>deny from</term>
<listitem>
<para>
Especifica os endereços que NÃO terão acesso ao recurso especificado.  As
explicações referentes a esta diretiva de acesso são idêntica as de
<emphasis>allow from</emphasis>.
</para>
</listitem>
</varlistentry>
</variablelist>
<para>
É recomendável o uso de endereços IP ao invés de endereços DNS e um mecanismo
anti-spoofing no firewall ou código de roteamento, pois ficará mais difícil um
ataque baseado em DNS spoofing, aumentando consideravelmente a segurança de seu
servidor web.
</para>
<para>
<emphasis role="strong">ATENÇÃO</emphasis>: Caso receba erros 403 (acesso
negado) sem bloquear a URL nas diretivas de acesso, uma dos seguintes problemas
pode ser a causa:
</para>
<itemizedlist>
<listitem>
<para>
O servidor Web não tem permissões para acessar/abrir o diretório da página.
Certifique-se que o <emphasis>dono</emphasis> e <emphasis>grupo</emphasis> do
processo <command>Apache</command> (especificado pela diretiva
<emphasis>User</emphasis> e <emphasis>Group</emphasis>) possuem permissões de
acesso àquele diretório.
</para>
</listitem>
<listitem>
<para>
Quando quer fazer uma listagem de arquivos do diretório e não especifica a
opção <literal>Option Indexes</literal> como opção de listagem.
</para>
</listitem>
<listitem>
<para>
Quando não está usando <literal>Option Indexes</literal> para impedir a
listagem de conteúdo do diretório e o não foi encontrado um arquivo de índice
válido dentre os existentes na diretiva <literal>DirectoryIndex</literal> no
diretório atual.
</para>
</listitem>
</itemizedlist>
<para>
Abaixo alguns exemplos de permissões de acesso:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options SymLinksIfOwnerMatch Indexes MultiViews
 Order allow,deny
 allow from all
&lt;/Directory&gt;
</screen>
<para>
Permite o acesso a de qualquer usuário de qualquer lugar (allow from all),
permite também a visualização da listagem formatada de arquivos caso nenhum
arquivo especificado na diretiva <emphasis>DirectoryIndex</emphasis> seja
encontrado (Indexes), permite negociação de conteúdo
(<emphasis>MultiViews</emphasis>) e seguir links caso o dono do arquivo confira
com o nome do link (<emphasis>SymLinksIfOwnerMatch</emphasis>).
</para>
<screen>
&lt;Directory /var/www&gt;
 Options SymLinksIfOwnerMatch Indexes MultiViews
&lt;/Directory&gt;
</screen>
<para>
Tem o mesmo significado da diretiva acima por métodos diferentes; quando
nenhuma opção <emphasis>Order</emphasis> é especificada,
<emphasis>deny,allow</emphasis> é definido como padrão, e como nenhuma opção de
acesso <emphasis>allow/deny</emphasis> foi especificada, o padrão "Order
deny,allow" é usado e permite TUDO como padrão.
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes
 Order deny,allow
 deny from all
&lt;/Directory&gt;
</screen>
<para>
Esta regra acima não tem muita lógica pois restringe o acesso de todos os
usuários ao diretório <filename>/var/www</filename>, ao menos se esta for sua
intenção...
</para>
<screen>
&lt;Location /focalinux&gt;
 Options All
 Order allow,deny
 allow from all
&lt;/Location&gt;
</screen>
<para>
A regra acima permite o acesso a URL
<filename>http://www.servidor.org/focalinux</filename> de qualquer host na
Internet
</para>
<screen>
&lt;Files .htaccess&gt;
 Order deny,allow
 deny from all
&lt;/Files&gt;
</screen>
<para>
Bloqueia o acesso a qualquer arquivo <filename>.htaccess</filename> do sistema
</para>
<screen>
&lt;Files ~ "leiame-(arm|alpha|m68k|sparc|powerpc)\.txt"&gt;
 Order deny,allow
 deny from all
&lt;/Files&gt;
</screen>
<para>
Bloqueia o acesso a qualquer arquivo <filename>leiame-arm.txt</filename>,
<filename>leiame-alpha.txt</filename>, <filename>leiame-m68k.txt</filename>,
<filename>leiame-sparc.txt</filename> e <filename>leiame-powerpc.txt</filename>
fazendo uso de expressões regulares.
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes
 Order mutual-failure
 allow from .dominio.com.br
 deny from lammer.dominio.com.br
&lt;/Directory&gt;
</screen>
<para>
A diretiva acima somente permite acesso ao diretório
<filename>/var/www</filename> de máquinas pertencentes ao domínio
<filename>.dominio.com.br</filename> desde que não seja
<filename>lammer.dominio.com.br</filename>.
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes MultiViews
 Order allow,deny
 deny from .com .com.br
 allow from all 
&lt;/Directory&gt;
</screen>
<para>
Bloqueia o acesso ao diretório <filename>/var/www</filename> de computadores
pertencentes aos domínios <emphasis>.com</emphasis> e
<emphasis>.com.br</emphasis>.
</para>
<screen>
&lt;Directory /var/www&gt;
 Options None
 Order deny,allow
 allow from 192.168.1. .guiafoca.org .debian.org
 deny from 200.200.123.
&lt;/Directory&gt;
</screen>
<para>
A regra acima permite o acesso de máquinas da rede
<literal>192.168.1.*</literal>, do domínio <literal>*.guiafoca.org</literal> e
<literal>*.debian.org</literal>, o acesso de máquinas da rede
<literal>200.200.123.*</literal> é bloqueado (nada contra, peguei nesse número
ao acaso :-).
</para>
<para>
Note que a máquina <literal>192.168.4.10</literal> terá acesso LIVRE a regra
acima, pois não conferirá nem com <emphasis>allow</emphasis> nem com
<emphasis>deny</emphasis>, então o processamento cairá na diretiva padrão de
<emphasis>deny,allow</emphasis>, que neste caso permite o acesso caso nem
<emphasis>allow</emphasis> e <emphasis>deny</emphasis> conferiram com o padrão.
</para>
<screen>
&lt;Directory /var/www&gt;
 Options None
 Order allow,deny
 allow from 192.168.1. .cipsga.org.br .debian.org
 deny from 200.200.123.
&lt;/Directory&gt;
</screen>
<para>
A regra acima é idêntica a anterior somente com a mudança da opção
<emphasis>Order</emphasis>.  Bloqueia o acesso de máquinas da rede
<literal>200.200.123.*</literal> e permite o acesso de máquinas da rede
<literal>192.168.1.*</literal>, do domínio <literal>*.cipsga.org.br</literal> e
<literal>*.debian.org</literal>.
</para>
<para>
Note que a máquina <literal>192.168.4.10</literal> terá acesso BLOQUEADO a
regra acima, pois não conferirá nem com <emphasis>allow</emphasis> nem com
<emphasis>deny</emphasis>, então o processamento cairá na diretiva padrão de
<emphasis>allow,deny</emphasis> que neste caso bloqueia o acesso.
</para>
</section>

<section xml:id="s-apache-acesso-restr-auth"><info><title>Autenticação</title></info>
<para>
Através da <emphasis>autenticação</emphasis> (controlado pelo módulo
<filename>mod_auth</filename>) é possível especificar um
<emphasis>nome</emphasis> e <emphasis>senha</emphasis> para acesso ao recurso
solicitado.  As senhas são gravadas em formato criptografado usando
<emphasis>Crypto</emphasis> ou <emphasis>MD5</emphasis> (conforme desejado).  O
arquivo de senhas pode ser centralizado ou especificado individualmente por
usuário, diretório ou até mesmo por arquivo acessado.
</para>
<section xml:id="s-apache-acesso-restr-auth-arqsenha"><info><title>Criando um arquivo de Senhas</title></info>
<para>
O arquivo de senhas pode ser criado e mantido através do uso de 3 utilitários:
<command>htpasswd</command>, <command>htdigest</command> e
<command>dbmmanage</command>:
</para>
<section xml:id="s-apache-acesso-restr-auth-arqsenha-htpasswd"><info><title>htpasswd</title></info>
<para>
Este é usado para criar o arquivo de senhas.  Para criar um banco de dados com
o nome <filename>senhas</filename> para o usuário
<replaceable>convidado</replaceable>, é usada a seguinte sintaxe:
</para>
<para>
<literal>htpasswd -c -m senhas convidado</literal>
</para>
<para>
Você será perguntado por uma senha para o usuário
<replaceable>convidado</replaceable> e para redigita-la.  A opção "-c" indica
que deverá ser criado um arquivo, a opção "-m" indica a utilização de senhas
criptografadas usando o algoritmo <emphasis>MD5</emphasis>, que garante maior
segurança que o método <emphasis>Crypto</emphasis>.  A senha pode ser
especificada diretamente na linha de comando através da opção "-b" (isto é um
ótimo recurso para utilização em shell scripts ou programas CGI de integração
com o navegador).
</para>
<para>
<literal>htpasswd -b -d senhas chefe abcdef</literal>
</para>
<para>
No exemplo acima, uma senha de alta segurança será introduzida no banco de
dados <filename>senhas</filename> tornando impossível o acesso a página do
usuário :-)
</para>
<para>
Note que esta senha foi cadastrada usando o algoritmo de criptografia Crypto
(opção -d).  O algoritmo <emphasis>SHA</emphasis> também pode ser usado como
alternativa, através da opção "-s".  Para modificar a senha do usuário
convidado, basta usar a mesma sintaxe (sem a opção "-c" que é usada para criar
um novo arquivo):
</para>
<para>
<literal>htpasswd -m senhas convidado</literal>
</para>
<para>
ou
</para>
<para>
<literal>htpasswd -b -m senhas convidado nova_senha</literal>
</para>
<para>
Opcionalmente você pode especificar a opção "-d" para atualizar também o
formato da senha para <emphasis>Crypto</emphasis>.  Podem existir senhas de
criptografias mistas (<emphasis>SHA, Crypto, MD5</emphasis>) no mesmo arquivo
sem nenhum problema.
</para>
<para>
A mudança do formato de senhas é útil quando se deseja aumentar o nível de
segurança oferecido por um melhor sistema ou para manter a compatibilidade com
alguns scripts/programas que compartilhem o arquivo de senhas.
</para>
</section>

<section xml:id="s-apache-acesso-restr-auth-arqsenha-htdigest"><info><title>htdigest e dbmmanage</title></info>
<para>
Estes são idênticos ao <command>htpasswd</command>, a diferença é que o
<command>htdigest</command> permite criar/manter um arquivo de senhas usando a
autenticação Digest, enquanto o <command>dbmmanage</command> permite manter o
banco de dados de senhas em um arquivo <filename>DB, DBM, GDBM</filename> e
<filename>NDBM</filename>, formatos conhecidos pelo Perl.
</para>
</section>

</section>

<section xml:id="s-apache-acesso-restr-auth-usuarios"><info><title>Autenticação através de usuários</title></info>
<para>
Através deste método é possível especificar que usuários terão acesso ao
recurso definido, usando senhas de acesso individuais criptografadas usando um
dos utilitários da seção anterior.  Para restringir o acesso ao endereço
<filename>http://servidor.org/teste</filename>:
</para>
<screen>
&lt;Location /teste&gt;
 AuthName "Acesso a página do Foca Linux"
 AuthType basic
 AuthUserFile /home/gleydson/SenhaUsuario
# AuthGroupFile /home/users/SenhaGrupo
 Require valid-user
&lt;/Location&gt;
</screen>
<para>
Ao tentar acessar o endereço <filename>http://servidor/teste</filename>, será
aberta uma janela no navegador com o título <emphasis>Enter username for Acesso
a página do Foca Linux at servidor.org</emphasis>, a diretiva <emphasis>Require
valid-user</emphasis> definem que o usuário e senha digitados devem existir no
arquivo especificado por <emphasis>AuthUserFile</emphasis> para que o acesso
seja garantido.  Uma explicação de cada opção de acesso usado na autenticação:
</para>
<variablelist>
<varlistentry>
<term>AuthName</term>
<listitem>
<para>
Será o nome que aparecerá na janela de autenticação do seu navegador indicando
qual área restrita está solicitando senha (podem existir várias no servidor,
bastando especificar várias diretivas de restrições).
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>AuthType</term>
<listitem>
<para>
Especifica o método de que o nome e senha serão passados ao servidor.  Este
método de autenticação pode ser <emphasis>Basic</emphasis> ou
<emphasis>Digest</emphasis>
</para>
<itemizedlist>
<listitem>
<para>
<literal>Basic</literal> - Utiliza a codificação <emphasis>base64</emphasis>
para encodificação de nome e senha, enviando o resultado ao servidor.  Este é
um método muito usado e pouco seguro, pois qualquer sniffer instalado em um
roteador pode capturar e descobrir facilmente seu nome e senha.
</para>
</listitem>
<listitem>
<para>
<literal>Digest</literal> - Transmite os dados de uma maneira que não pode ser
facilmente decodificada, incluindo a codificação da área protegida
(especificada pela diretiva <emphasis>AuthName</emphasis>) que possui a
seqüencia de login/senha válida.  A diferença deste método é que você precisará
de arquivos de senhas diferentes para cada área protegida especificada por
<emphasis>AuthName</emphasis> (também chamada de Realm).
</para>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>AuthUserFile</term>
<listitem>
<para>
É o arquivo gerado pelo utilitário <command>htpasswd</command> que contém a
senha correspondente ao usuário
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>AuthGroupFile</term>
<listitem>
<para>
É um arquivo texto que contém o nome do grupo, dois pontos (":") e o nome dos
usuários que podem ter acesso ao recurso, separados por vírgulas.  No exemplo
acima ele se encontra comentado, mas a seguir encontrará exemplos que explicam
em detalhes o funcionamento desta diretiva.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>Require</term>
<listitem>
<para>
Especifica que usuários podem ter acesso ao diretório.  Podem ser usadas uma
das 3 sintaxes:
</para>
<itemizedlist>
<listitem>
<para>
<literal>Require user usuário1 usuário2 usuário3</literal> - Somente os
usuários especificados são considerados válidos para ter acesso ao diretório.
</para>
</listitem>
<listitem>
<para>
<literal>Require group grupo1 grupo2 grupo3</literal> - Somente os usuários dos
grupos especificados são considerados válidos para terem acesso ao diretório.
Esta diretiva é útil quando deseja que somente alguns usuários de determinado
grupo tenham acesso ao recurso (por exemplo, usuários do grupo admins).
</para>
</listitem>
<listitem>
<para>
<literal>Require valid-user</literal> - Qualquer usuário válido no banco de
dados de senhas pode acessar o diretório.  É bem útil quando as opções de
acesso especificadas por Require user são muito longas.
</para>
<para>
A opção Require deve ser acompanhado das diretivas
<emphasis>AuthName</emphasis>, <emphasis>AuthType</emphasis> e as diretivas
<emphasis>AuthUserFile</emphasis> e <emphasis>AuthGroupFile</emphasis> para
funcionar adequadamente.
</para>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<para>
<emphasis role="strong">OBS</emphasis>: É necessário reiniciar o
<command>Apache</command> depois de qualquer modificação em seu arquivo de
configuração (<literal>apachectl restart</literal>), ou recarregar os arquivos
de configuração (<literal>apachectl graceful</literal>).  Note que o
<command>apachectl</command> é somente um shell script para interação mais
amigável com o servidor web <command>apache</command>, retornando mensagens
indicando o sucesso/falha no comando ao invés de códigos de saída.
</para>
<para>
Alguns exemplos para melhor assimilação:
</para>
<screen>
&lt;Location /teste&gt;
 AuthName "Acesso a página do Foca Linux"
 AuthType basic
 AuthUserFile /home/gleydson/SenhaUsuario
 Require user gleydson
&lt;/Location&gt;
</screen>
<para>
As explicações são idênticas a anterior, mas somente permite o acesso do
usuário <literal>gleydson</literal> a URL
<filename>http://servidor.org/teste</filename>, bloqueando o acesso de outros
usuários contidos no arquivo <emphasis>AuthUserFile</emphasis>.
</para>
<screen>
&lt;Location /teste&gt;
 AuthName "Acesso a página do Foca Linux"
 AuthType basic
 AuthUserFile /home/gleydson/SenhaUsuario
 Require user gleydson usuario1 usuario2
&lt;/Location&gt;
</screen>
<screen>
&lt;Location /teste&gt;
 AuthName "Acesso a página do Foca Linux"
 AuthType basic
 AuthUserFile /home/gleydson/SenhaUsuario
 Require user gleydson
 Require user usuario1
 Require user usuario2
&lt;/Location&gt;
</screen>
<para>
As 2 especificações acima são equivalentes e permite o acesso aos usuários
<literal>gleydson</literal>, <literal>usuario1</literal> e
<literal>usuario2</literal> a página
<filename>http://servidor.org/teste</filename>.
</para>
</section>

<section xml:id="s-apache-acesso-restr-auth-grupos"><info><title>Autenticação usando grupos</title></info>
<para>
Há casos onde existem usuários de um arquivo de senhas que devem ter acesso a
um diretório e outros não, neste caso a diretiva
<emphasis>valid-user</emphasis> não pode ser especificada (porque permitiria o
acesso de todos os usuários do arquivo de senha ao diretório) e uma grande
lista de usuários ficaria bastante complicada de ser gerenciada com vários
usuários na diretiva <emphasis>Require user</emphasis>.
</para>
<para>
Quando existe esta situação, é recomendado o uso de grupos de usuários.  Para
fazer uso desse recurso, primeiro deverá ser criado um arquivo quer armazenará
o nome do <emphasis>grupo</emphasis> e dos usuários pertencente àquele grupo
usando a seguinte sintaxe (vamos chamar este arquivo de
<filename>SenhaGrupo</filename>):
</para>
<screen>
admins: gleydson usuario2
usuarios: usuario1 usuario2 usuario3 gleydson
</screen>
<para>
Agora adaptamos o exemplo anterior para que somente os usuários especificados
no grupo admins do arquivo criado acima:
</para>
<screen>
&lt;Location /teste&gt;
 AuthName "Acesso a página do Foca Linux"
 AuthType basic
 AuthUserFile /home/gleydson/SenhaUsuario
 AuthGroupFile /home/gleydson/SenhaGrupo
 Require group admins
&lt;/Location&gt;
</screen>
<para>
Agora somente os usuários pertencentes ao grupo <emphasis>admins</emphasis>
(<emphasis>gleydson</emphasis> e <emphasis>usuario2</emphasis>) poderão ter
acesso ao diretório <filename>/teste</filename>.
</para>
<para>
<emphasis role="strong">OBS1</emphasis>: Verifique se o servidor Web possui
acesso a leitura no arquivo de senhas de usuários e grupos, caso contrário será
retornado um código "500 - Internal Server Error".  Este tipo de erro é
caracterizado por tudo estar OK na sintaxe dos arquivos de configuração após
checagem com "apache -t" e todas as diretivas de controle de acesso apontam
para os diretórios e arquivos corretos.
</para>
<para>
<emphasis role="strong">OBS2:</emphasis>: Sempre use espaços para separar os
nomes de usuários pertencentes a um grupo.
</para>
<para>
<emphasis role="strong">OBS3</emphasis>: NUNCA coloque os arquivos que contém
senhas e grupos em diretórios de acesso público onde usuários podem ter acesso
via o servidor Web.  Tais localizações são <filename>/var/www</filename>,
<filename>/home/"usuario"/public_html</filename> e qualquer outro diretório de
acesso público que defina em seu sistema.
</para>
<para>
É recomendável também ocultar estes arquivos através da diretiva &lt;Files&gt;
evitando possíveis riscos de segurança com usuários acessando os arquivos de
senha e grupo.
</para>
<para>
Na distribuição <command>Debian</command>, qualquer arquivo iniciando com
<filename>.ht*</filename> será automaticamente ocultado pelo sistema, pois já
existe uma diretiva &lt;Files ~ "\.ht"&gt;.  Tal diretiva pode também ser
especificada no arquivo de acesso <filename>.htaccess</filename>.  Assim um
arquivo <filename>.htsenha</filename> e <filename>.htgroup</filename> são bons
nomes se estiver desejando ocultar dados de olhos curiosos...
</para>
</section>

</section>

<section xml:id="s-apache-acesso-restr-autor+auth"><info><title>Usando autorização e autenticação juntos</title></info>
<para>
Os métodos de <emphasis>autorização</emphasis> e
<emphasis>autenticação</emphasis> podem ser usados ao mesmo tempo dentro de
qualquer uma das diretivas de controle de acesso.  As diretivas de
<emphasis>autorização</emphasis> são processadas primeiro (mod_access) e depois
as diretivas de <emphasis>autenticação</emphasis> (mod_auth).  Segue um
exemplo:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes
 Order deny,allow
 allow from .dominiolocal.com.br
 deny from all
 AuthName "Acesso ao diretório do servidor Web"
 AuthType basic
 AuthUserFile /var/cache/apache/senhas
 Require valid-user
&lt;/Directory&gt;
</screen>
<para>
Para ter acesso ao diretório <filename>/var/www</filename>, primeiro o
computador deve fazer parte do domínio
<filename>.dominiolocal.com.br</filename>, assim ela passa pelo teste de
autorização, depois disso será necessário fornecer o login e senha para acesso
a página, digitando o login e senha corretos, o teste de autenticação será
completado com sucesso e o acesso ao diretório <filename>/var/www</filename>
autorizado.
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes
 Order mutual-failure
 allow from .dominiolocal.com.br
 deny from lammer.dominiolocal.com.br
 AuthName "Acesso ao diretório do servidor Web"
 AuthType basic
 AuthUserFile /var/cache/apache/senhas
 AuthGroupFile /var/cache/apache/grupos
 Require group admins
&lt;/Directory&gt;
</screen>
<para>
No exemplo acima, é usado o método de autorização com a opção <emphasis>Order
mutual-failure</emphasis> e o método de autenticação através de
<emphasis>grupos</emphasis>.  Primeiro é verificado se o usuário pertence ao
domínio <filename>.dominiolocal.com.br</filename> e se ele não está acessando
da máquina <filename>lammer.dominiolocal.com.br</filename>, neste caso ele
passa pelo teste de autorização.  Depois disso ele precisará fornecer o nome e
senha válidos, com o login pertencente ao <emphasis>AuthGroupFile</emphasis>,
passando pelo processo de autenticação e obtendo acesso ao diretório
<filename>/var/www</filename>.
</para>
<section xml:id="s-apache-acesso-restr-autor+auth-diferenciado"><info><title>Acesso diferenciado em uma mesma diretiva</title></info>
<para>
É interessante permitir usuários fazendo conexões de locais confiáveis terem
acesso direto sem precisar fornecer nome e senha e de locais inseguros
acessarem somente após comprovarem <emphasis role="strong">quem</emphasis>
realmente são.  Como é o caso de permitir usuários de uma rede privada terem
acesso completo aos recursos e permitir o acesso externo ao mesmo recurso
somente através de senha.  Isto pode ser feito com o uso da diretiva
<emphasis>Satisfy</emphasis> junto ao bloco de
<emphasis>autorização/autenticação</emphasis>.  Vamos tomar como base o exemplo
anterior:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes
 Order mutual-failure
 allow from .dominiolocal.com.br
 deny from lammer.dominiolocal.com.br
 AuthName "Acesso ao diretório do servidor Web"
 AuthType basic
 AuthUserFile /var/cache/apache/senhas
 AuthGroupFile /var/cache/apache/grupos
 Require group admins
 Satisfy any
&lt;/Directory&gt;
</screen>
<para>
Note que o exemplo é o mesmo com a adição da diretiva <emphasis>Satisfy
any</emphasis> no final do bloco do arquivo.  Quando a opção
<emphasis>Satisfy</emphasis> não é especificada, ela assumirá "all" como
padrão, ou seja, o usuário deverá passar no teste de autorização e autenticação
para ter acesso.
</para>
<para>
A diferença do exemplo acima em relação ao da seção anterior é se a máquina
passar no teste de autorização ela já terá acesso garantido.  Caso falhe no
teste de autorização, ainda terá a chance de ter acesso a página passando na
checagem de autenticação.
</para>
<para>
Isto garante acesso livre aos usuários do domínio
<filename>.dominiolocal.com.br</filename>.  Já os outros usuários, incluindo
acessos vindos de <filename>lammer.dominiolocal.com.br</filename> que pode ser
uma máquina com muito uso, poderá ter acesso ao recurso caso tenha fornecido um
nome e senha válidos para passar pelo processo de autenticação.  Tenha isto em
mente...  este tipo de problema é comum e depende mais de uma política de
segurança e conduta interna, o sistema de segurança não pode fazer nada a não
ser permitir acesso a um nome e senha válidos.
</para>
<para>
Tenha cuidado com o uso da opção <emphasis>Satisfy</emphasis> em diretivas que
especificam somente o método de autenticação:
</para>
<screen>
&lt;Directory /var/www&gt;
 Options Indexes
 AuthName "Acesso ao diretório do servidor Web"
 AuthType basic
 AuthUserFile /var/cache/apache/senhas
 AuthGroupFile /var/cache/apache/grupos
 Require group admins
 Satisfy any
&lt;/Directory&gt;
</screen>
<para>
ATENÇÃO PARA O DESCUIDO ACIMA!: Como o método de autorização NÃO é
especificado, é assumido <emphasis>deny,allow</emphasis> como padrão, que
permite o acesso a TODOS os usuários.  O bloco acima <emphasis role="strong">NUNCA</emphasis> executará o método de autenticação por este
motivo.  A melhor coisa é NÃO usar a opção <emphasis>Satisfy</emphasis> em
casos que só requerem autenticação ou usar <emphasis>Satisfy all</emphasis>
(que terá o mesmo efeito de não usa-la, hehehe).
</para>
<para>
A falta de atenção nisto pode comprometer silenciosamente a segurança de seu
sistema.
</para>
</section>

</section>

<section xml:id="s-apache-acesso-restr-htaccess"><info><title>O arquivo <filename>.htaccess</filename></title></info>
<para>
O arquivo <filename>.htaccess</filename> deve ser colocado no diretório da
página que deverá ter suas permissões de acesso/listagem controladas.  A
vantagem em relação a inclusão direta de diretivas de acesso dentro do arquivo
de configuração do <command>Apache</command>, é que o controle de acesso poderá
ser definido pelo próprio webmaster da página, sem precisar ter acesso direto a
configuração do <command>Apache</command>, que requerem privilégios de root.
</para>
<para>
Outro ponto fundamental é que não há necessidade de reiniciar o servidor Web,
pois este arquivo é lido no momento de cada acesso ao diretório que controla.
O nome do arquivo OverRide pode ser definido através da diretiva
<emphasis>AccessFileName</emphasis> no arquivo de configuração do
<command>Apache</command>, <filename>.htaccess</filename> é usado como padrão.
</para>
<para>
O controle de que opções estarão disponíveis no <filename>.htaccess</filename>
são definidas na diretiva <emphasis>AllowOverride</emphasis> que pode conter o
seguintes parâmetros:
</para>
<itemizedlist>
<listitem>
<para>
<literal>None</literal> - O servidor não buscará o arquivo
<literal>.htaccess</literal> nos diretórios
</para>
</listitem>
<listitem>
<para>
<literal>All</literal> - O servidor utilizará todas as opções abaixo no arquivo
<filename>.htaccess</filename>
</para>
</listitem>
<listitem>
<para>
<literal>AuthConfig</literal> - Permite o uso de diretivas de autenticação
(<emphasis>AuthDBMGroupFile</emphasis>, <emphasis>AuthDBMUserFile</emphasis>,
<emphasis>AuthGroupFile</emphasis>, <emphasis>AuthName</emphasis>,
<emphasis>AuthType</emphasis>, <emphasis>AuthUserFile</emphasis>,
<emphasis>Require</emphasis>, etc.).
</para>
</listitem>
<listitem>
<para>
<literal>FileInfo</literal> - Permite o uso de diretivas controlando o tipo de
documento (<emphasis>AddEncoding</emphasis>, <emphasis>AddLanguage</emphasis>,
<emphasis>AddType</emphasis>, <emphasis>DefaultType</emphasis>,
<emphasis>ErrorDocument</emphasis>, <emphasis>LanguagePriority</emphasis>,
etc.).
</para>
</listitem>
<listitem>
<para>
<literal>Indexes</literal> - Permite o uso de diretivas controlando a indexação
de diretório (<emphasis>AddDescription</emphasis>,
<emphasis>AddIcon</emphasis>, <emphasis>AddIconByEncoding</emphasis>,
<emphasis>AddIconByType</emphasis>, <emphasis>DefaultIcon</emphasis>,
<emphasis>DirectoryIndex</emphasis>, <emphasis>FancyIndexing</emphasis>,
<emphasis>HeaderName</emphasis>, <emphasis>IndexIgnore</emphasis>,
<emphasis>IndexOptions</emphasis>, <emphasis>ReadmeName</emphasis>, etc.).
</para>
</listitem>
<listitem>
<para>
<literal>Limit</literal> - Permite o uso de diretivas controlando o acesso ao
computador (<emphasis>allow</emphasis>, <emphasis>deny</emphasis> e
<emphasis>order</emphasis>).
</para>
</listitem>
<listitem>
<para>
<literal>Options</literal> - Permite o uso de diretivas controlando
características específicas do diretório (<emphasis>Options</emphasis> e
<emphasis>XBitHack</emphasis>).
</para>
</listitem>
</itemizedlist>
<para>
<emphasis role="strong">OBS</emphasis>: Não tem sentido usar a opção
<emphasis>AllowOverride</emphasis> dentro da diretiva &lt;Location&gt;, ela
será simplesmente ignorada.
</para>
<para>
Para acesso ao arquivo <filename>.htaccess</filename> do diretório
<filename>/var/www/focalinux</filename>, o <command>Apache</command> buscará os
arquivos <filename>.htaccess</filename> na seqüencia:
<filename>/.htaccess</filename>, <filename>/var/.htaccess</filename>,
<filename>/var/www/.htaccess</filename>,
<filename>/var/www/focalinux/.htaccess</filename>, qualquer diretiva que não
exista no <filename>.htaccess</filename> do diretório
<filename>/var/www/focalinux</filename> terá seu valor definido pela diretiva
dos arquivos <filename>.htaccess</filename> dos diretórios anteriores.  Somente
após esta seqüencia de checagens o acesso ao documento é permitido (ou negado).
</para>
<para>
Por este motivo, muitos administradores decidem desativar completamente o uso
de arquivos <filename>.htaccess</filename> no diretório raíz e habilitar
somente nos diretórios especificados pela diretiva &lt;Directory&gt; no arquivo
de configuração do <command>Apache</command>, evitando brechas de segurança na
manipulação destes arquivos (esta é uma boa idéia a não ser que se dedique 24
horas somente na administração do seu servidor Web e conheça toda sua estrutura
hierárquica de segurança:
</para>
<screen>
&lt;Directory /&gt;
 AllowOverride none
&lt;/Directory&gt;

&lt;Directory /var/www&gt;
 AllowOverride limit authconfig indexes
&lt;/Directory&gt;
</screen>
<para>
Na especificação acima, o arquivo <filename>.htaccess</filename> será procurado
no diretório <filename>/var/www</filename> e seus sub-diretórios, usando
somente opções que controlam a autorização de acesso
(<emphasis>limit</emphasis>), autenticação e opções
(<emphasis>authconfig</emphasis>) e de indexação de documentos
(<emphasis>indexes</emphasis>).
</para>
<para>
Alguns exemplos do uso do arquivo <filename>.htaccess</filename>:
</para>
<para>
Para permitir o acesso direto de usuários da rede
<literal>192.168.1.*</literal> diretamente, e requerer senha de acesso para
outros usuários, o seguinte arquivo <filename>.htaccess</filename> deve ser
criado no diretório <filename>/var/www</filename>:
</para>
<screen>
Order deny,allow
allow from 192.168.1.0/24
deny from all
AuthName "Acesso a página Web principal da Empresa"
AuthType basic
AuthUserFile /var/cache/apache/senhas
Require valid-user
Satisfy any
</screen>
<para>
Note que a sintaxe é exatamente a mesma das usadas na diretivas de acesso, por
este motivo vou dispensar explicações detalhadas a respeito.
</para>
<para>
<emphasis role="strong">ATENÇÃO</emphasis>: A diretiva <emphasis>Options
Indexes</emphasis> deverá ser especificada no
<emphasis>AllowOverRide</emphasis> e não no arquivo
<filename>.htaccess</filename>.  Agora você já sabe o que fazer se estiver
recebendo erros 500 ao tentar acessar a página (Erro interno no servidor)...
</para>
</section>

<section xml:id="s-apache-acesso-setenvif"><info><title>Usando a diretiva SetEnvIf com Allow e Deny</title></info>
<para>
É possível especificar o acesso baseado em variáveis de ambiente usando a
diretiva <emphasis>SetEnvIf</emphasis>, isto lhe permite controlar o acesso de
acordo com o conteúdo de cabeçalhos HTTP.  A sintaxe é a seguinte:
</para>
<para>
<literal>SetEnvIf [<emphasis>atributo</emphasis>]
[<emphasis>expressão</emphasis>] [<emphasis>variável</emphasis>]</literal>
</para>
<para>
Isto poder ser facilmente interpretado como: Se o "atributo" especificado
conter a "expressão", a "variável" será criada e armazenará o valor verdadeiro.
Veja abaixo:
</para>
<screen>
SetEnvIf User-Agent ".*MSIE*." EXPLODER
&lt;Directory /var/www&gt;
 Order deny,allow
 allow from all
 deny from env=EXPLODER
&lt;/Directory&gt;
</screen>
<para>
Se o Navegador (campo <emphasis>User-Agent</emphasis> do cabeçalho http) usado
para acessar a página for o <literal>Internet Explorer</literal>, a variável
<replaceable>EXPLODER</replaceable> será criada e terá o valor verdadeiro
(porque a expressão de <emphasis>SetEnvIf</emphasis> conferiu com a expressão).
</para>
<para>
Note o uso de "deny from env=VARIÁVEL".  Neste caso se o navegador for o
<literal>Internet Explorer</literal>, o acesso será bloqueado (pois o navegador
conferiu, assim a variável <replaceable>EXPLODER</replaceable> recebeu o valor
verdadeiro).
</para>
<para>
É permitido especificar as diretivas de acesso normais junto com especificação
de variáveis de ambiente, basta separa-los com espaços.  Uma descrição completa
dos cabeçalhos HTTP, conteúdo e parâmetros aceitos por cada um são descritos na
<literal>RFC 2068</literal>.
</para>
</section>

<section xml:id="s-apache-acesso-limit"><info><title>A diretiva &lt;Limit&gt;</title></info>
<para>
Esta diretiva é semelhante a &lt;Directory&gt; mas trabalha com métodos HTTP
(como GET, PUT, POST, etc) ao invés de diretórios.  A diretiva &lt;Limit&gt;
pode ser usada dentro da diretiva de acesso &lt;Directory&gt;,
&lt;Location&gt;, mas nenhuma diretiva de controle de acesso pode ser colocada
dentro de &lt;Limit&gt;.
</para>
<para>
Os métodos HTTP válidos são: GET, POST, PUT DELETE, CONNECT, OPTIONS, TRACE,
PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK e UNLOCK.  Note que os
métodos são case-sensitive.  Por exemplo:
</para>
<screen>
&lt;Directory /var/www&gt;
 Option Indexes
  &lt;Limit POST PUT DELETE&gt;
     Order deny,allow
     allow from 192.168.1.0/24
     deny from all
   &lt;/Limit&gt;
&lt;/Directory&gt;
</screen>
<para>
Somente permitem o uso dos métodos POST, PUT, DELETE de máquinas da rede
interna.
</para>
<para>
<emphasis role="strong">OBS1</emphasis>: Se o método GET é bloqueado, o
cabeçalho HTTP também será bloqueado.
</para>
<para>
<emphasis role="strong">OBS2</emphasis>: A diretiva de acesso &lt;Limit&gt;
somente terá efeito na diretiva &lt;Location&gt; se for especificada no arquivo
de configuração do servidor web.  A diretiva &lt;Location&gt; simplesmente é
ignorada nos arquivos <filename>.htaccess</filename>...
</para>
<para>
Este abaixo é usado por padrão na distribuição <command>Debian</command> para
restringir para somente leitura o acesso aos diretórios de usuários acessados
via módulo <filename>mod_userdir</filename>:
</para>
<screen>
&lt;Directory /home/*/public_html&gt;
    AllowOverride FileInfo AuthConfig Limit
    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
    &lt;Limit GET POST OPTIONS PROPFIND&gt;
        Order allow,deny
        Allow from all
    &lt;/Limit&gt;
    &lt;Limit PUT DELETE PATCH PROPPATCH MKCOL COPY MOVE LOCK UNLOCK&gt;
        Order deny,allow
        Deny from all
    &lt;/Limit&gt;
&lt;/Directory&gt;
</screen>
</section>

<section xml:id="s-apache-acesso-limitexcept"><info><title>Diretiva &lt;LimitExcept&gt;</title></info>
<para>
Esta diretiva é semelhante a &lt;Limit&gt;, mas atinge todos os métodos HTTP,
menos os especificados.
</para>
</section>

</section>

